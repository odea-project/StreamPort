library(reticulate)
python_version <- r"(C:\Users\PC0118\AppData\Local\Programs\Python\Python311)"
use_python(python_version, required=TRUE)
source_python("DeviceAnalysis.py")
import os
import(os)
library(IRkernel)
library(reticulate)
reticulate::repl_python()
from src.StreamPort.device.DeviceEngine import DeviceEngine
from src.StreamPort.device.DeviceAnalysis import DeviceAnalysis
dev = DeviceEngine(source = r'C:\Users\PC0118\Desktop\ExtractedSignals')
dev.print()
quit
analyses <- py$dev$find_analyses()
py$dev$add_analyses(analyses)
py$dev$print()
reticulate::repl_python()
from src.StreamPort.device.DeviceProcSettings import ExtractPressureFeatures
quit
settings <- py$ExtractPressureFeatures(weighted = FALSE)
py$dev$add_settings(settings)
py$dev$print()
pressure_features <- settings$run(py$dev)
py$dev$add_results(pressure_features)
reticulate::repl_python()
from src.StreamPort.device.DeviceProcSettings import DecomposeCurves
quit
curve_decomposer <- py$DecomposeCurves(period = 30)
py$dev$add_settings(curve_decomposer)
py$dev$print()
components <- curve_decomposer$run(py$dev)
reticulate::py_last_error()
reticulate::py_last_error()$r_trace$full_call
library(reticulate)
py_run_string("import sys; print(sys.path)")
reticulate::repl_python()
import os
sys.path.insert(0, os.path.abspath(os.getcwd()))
quit
py_run_string("print(sys.path)")
reticulate::source_python('C:\\Users\\PC0118\\Desktop\\StreamPort\\src\\StreamPort\\device\\DeviceEngine.py')
dev <- py$DeviceEngine(source = 'C:\Users\PC0118\Desktop\ExtractedSignals')
dev <- py$DeviceEngine(source = r'(C:\Users\PC0118\Desktop\ExtractedSignals)')
analyses <- dev$find_analyses()
dev$add_analyses(analyses)
dev$print()
reticulate::repl_python()
from src.StreamPort.device.DeviceEngine import DeviceEngine
from src.StreamPort.device.DeviceAnalysis import DeviceAnalysis
dev1 = DeviceEngine(source = r'C:\Users\PC0118\Desktop\ExtractedSignals')
dev1.print()
quit
dev$plot_analyses(group_by = 'method')
dev$plot_analyses(group_by = 'date')
settings <- py$ExtractPressureFeatures(weighted = FALSE)
source_python('C:\\Users\\PC0118\\Desktop\\StreamPort\\src\\StreamPort\\device\\DeviceProcSettings.py')
settings <- py$ExtractPressureFeatures(weighted = FALSE)
dev$add_settings(settings)
dev$print()
pressure_features <- settings$run(dev)
dev$add_results(pressure_features)
curve_decomposer <- py$DecomposeCurves(period = 30)
dev$add_settings(curve_decomposer)
dev$print()
components <- curve_decomposer$run(dev)
curve_decomposer <- py$DecomposeCurves(period = 30)
dev$add_settings(curve_decomposer)
dev$print()
components <- curve_decomposer$run(dev)
reticulate::repl_python()
quit
library(reticulate)
py_run_string("import sys; print(sys.path)")
reticulate::repl_python()
from src.StreamPort.device.DeviceProcSettings import FourierTransform
library(reticulate)
py_run_string("import sys; print(sys.path)")
reticulate::repl_python()
import os
sys.path.insert(0, os.path.abspath(os.getcwd()))
quit
py_run_string("print(sys.path)")
reticulate::source_python('C:\\Users\\PC0118\\Desktop\\StreamPort\\src\\StreamPort\\device\\DeviceEngine.py')
dev <- py$DeviceEngine(source = r'(C:\Users\PC0118\Desktop\ExtractedSignals)')
analyses <- dev$find_analyses()
dev$add_analyses(analyses)
dev$print()
dev$plot_analyses(group_by = 'date')
source_python('C:\\Users\\PC0118\\Desktop\\StreamPort\\src\\StreamPort\\device\\DeviceProcSettings.py')
settings <- py$ExtractPressureFeatures(weighted = FALSE)
dev$add_settings(settings)
dev$print()
pressure_features <- settings$run(dev)
dev$add_results(pressure_features)
curve_decomposer <- py$DecomposeCurves(period = 30)
dev$add_settings(curve_decomposer)
dev$print()
components <- curve_decomposer$run(dev)
library(reticulate)
reticulate::repl_python()
import os
import sys
sys.path.insert(0, os.path.abspath(os.getcwd()))
quit
py_run_string("print(sys.path)")
reticulate::source_python('C:\\Users\\PC0118\\Desktop\\StreamPort\\src\\StreamPort\\device\\DeviceEngine.py')
dev <- py$DeviceEngine(source = r'(C:\Users\PC0118\Desktop\ExtractedSignals)')
analyses <- dev$find_analyses()
dev$add_analyses(analyses)
dev$print()
source_python('C:\\Users\\PC0118\\Desktop\\StreamPort\\src\\StreamPort\\device\\DeviceProcSettings.py')
settings <- py$ExtractPressureFeatures(weighted = FALSE)
dev$add_settings(settings)
dev$print()
pressure_features <- settings$run(dev)
dev$add_results(pressure_features)
curve_decomposer <- py$DecomposeCurves(period = 30)
dev$add_settings(curve_decomposer)
components <- curve_decomposer$run(dev)
library(reticulate)
reticulate::repl_python()
import os
import sys
sys.path.insert(0, os.path.abspath(os.getcwd()))
quit
py_run_string("print(sys.path)")
reticulate::source_python('C:\\Users\\PC0118\\Desktop\\StreamPort\\src\\StreamPort\\device\\DeviceEngine.py')
dev <- py$DeviceEngine(source = r'(C:\Users\PC0118\Desktop\ExtractedSignals)')
analyses <- dev$find_analyses()
dev$add_analyses(analyses)
dev$print()
library(reticulate)
reticulate::repl_python()
import os
import sys
sys.path.insert(0, os.path.abspath(os.getcwd()))
quit
py_run_string("print(sys.path)")
reticulate::source_python('C:\\Users\\PC0118\\Desktop\\StreamPort\\src\\StreamPort\\device\\DeviceEngine.py')
library(reticulate)
reticulate::repl_python()
import os
import sys
sys.path.insert(0, os.path.abspath(os.getcwd()))
quit
py_run_string("print(sys.path)")
reticulate::source_python('C:\\Users\\PC0118\\Desktop\\StreamPort\\src\\StreamPort\\device\\DeviceEngine.py')
reticulate::source_python('C:\\Users\\PC0118\\Desktop\\StreamPort\\src\\StreamPort\\ml\\MachineLearningEngine.py')
library(reticulate)
reticulate::repl_python()
import os
import sys
sys.path.insert(0, os.path.abspath(os.getcwd()))
quit
py_run_string("print(sys.path)")
reticulate::source_python('C:\\Users\\PC0118\\Desktop\\StreamPort\\src\\StreamPort\\device\\DeviceEngine.py')
reticulate::source_python('C:\\Users\\PC0118\\Desktop\\StreamPort\\src\\StreamPort\\device\\DeviceEngine.py')
reticulate::source_python('C:\\Users\\PC0118\\Desktop\\StreamPort\\src\\StreamPort\\ml\\MachineLearningEngine.py')
ml <- py$MachineLearningEngine()
ml
ml$print()
dev <- py$DeviceEngine(source = r'(C:\Users\PC0118\Desktop\ExtractedSignals)')
analyses <- dev$find_analyses()
dev$add_analyses(analyses)
dev$print()
dev$plot_analyses(group_by = 'date')
